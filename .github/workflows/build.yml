name: Build

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      python-shortname:
        required: true
        type: string
      os:
        required: true
        type: string
      arch:
        required: true
        type: string

jobs:
  build:
    name: Python ${{ inputs.python-version }} on ${{ inputs.os }}-${{ inputs.arch }}
    runs-on: ${{ inputs.os }}
    timeout-minutes: 15
    env:
      CIBW_BUILD: ${{ inputs.python-shortname }}-${{ inputs.arch }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: True

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Configure compiler vars [macos]
        if: ${{ contains(runner.os, 'macos') }}
        run: |
          echo "CC=gcc-14" >> $GITHUB_ENV
          echo "CXX=g++-14" >> $GITHUB_ENV
          echo "LD=ld" >> $GITHUB_ENV
          echo "AR=gcc-ar-14" >> $GITHUB_ENV
          echo "RANLIB=gcc-ranlib-14" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=13.0" >> $GITHUB_ENV

      - name: Configure compiler vars [macos/arm]
        if: ${{ contains(runner.arch, 'ARM64') }}
        run: echo "MACOSX_DEPLOYMENT_TARGET=14.0" >> $GITHUB_ENV

      - name: Install cibuildwheel
        run: python -m pip install -U pip wheel cibuildwheel twine

      - name: Run cibuildwheel
        run: cibuildwheel --output-dir wheelhouse

      - name: Check metadata
        run: twine check wheelhouse/*

      - uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        with:
          name: cibw-${{ env.CIBW_BUILD }}
          path: wheelhouse/*.whl
