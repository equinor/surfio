[build-system]
requires = ["numpy", "scikit-build-core", "setuptools_scm"]
build-backend = "scikit_build_core.build"

[project]
name = "surfio"
description = "Reader/Writer library for irap files."
dynamic = ["version"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Other Environment",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
dependencies = []

[dependency-groups]
test = ["pytest", "xtgeo", "numpy", "cmake"]
dev = ["pre-commit", "deptry", { include-group = "test" }]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = ["tests/python_module"]

[tool.setuptools_scm]

[[tool.scikit-build.overrides]]
if.platform-system = "^win.*"
cmake.define = { CMAKE_TOOLCHAIN_FILE = "WindowsToolchain/Windows.MSVC.toolchain.cmake" }

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/pybind_module/_version.py"]
cmake.args = ["-G Ninja"]

[tool.cibuildwheel]
build-frontend = "build[uv]"
test-groups = ["test"]
before-build = "rm -rf {package}/build {package}/python/surfio/*.so"
test-command = ["pytest {package}/tests/python_module"]

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
manylinux-pypy_x86_64-image = "manylinux_2_28"
manylinux-pypy_aarch64-image = "manylinux_2_28"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "PGH", # pygrep-hooks
  "RUF", # Ruff-specific
  "UP",  # pyupgrade
]
